AC_INIT(configure.in)
AM_CONFIG_HEADER(config.h)

GAUTOMATA_VERSION=0.10

VERSION=$GAUTOMATA_VERSION
PACKAGE=gautomata

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_LIBTOOL
AC_ISC_POSIX
AC_STDC_HEADERS
AC_ARG_PROGRAM

AM_PATH_GBDD(0.10, [])
AC_SUBST(GBDD_LIBS)

AM_MAINTAINER_MODE

AC_MSG_CHECKING(whether to support MONA)
AC_ARG_WITH(mona,
[  --with-mona[=PATH]     Compile with MONA support.],
[ case "$withval" in
  no)
	AC_MSG_RESULT(no)

	INCLUDEDIR_MONA=""
	CFLAGS_MONA=""
	;;
  *)
	AC_MSG_RESULT(yes)
	if test "x$withval" = "xyes"; then
		LIBS_MONA="$prefix/lib/mona/libbdd.a $prefix/lib/mona/libdfa.a $prefix/lib/mona/libmem.a"
		INCLUDEDIR_MONA="$prefix/include/mona"
	else
		CFLAGS_MONA="-I$withval/include"
		INCLUDEDIR_MONA="$withval/include"
		LIBS_MONA="$withval/lib/mona/libbdd.a $withval/lib/mona/libdfa.a $withval/lib/mona/libmem.a"
	fi
	LIBS="$LIBS $LIBS_MONA"
	CFLAGS="$CFLAGS $CFLAGS_MONA"
	CXXFLAGS="$CXXFLAGS $CFLAGS_MONA"

	AC_TRY_LINK([ #include<stdio.h>
                      #include <mona/DFA/dfa.h> ],
        	    [ bdd_init(); ],
		    [],
		    [ AC_MSG_ERROR(Could not find the MONA library.  You must first install MONA.) ])

	AC_DEFINE(GAUTOMATA_WITH_MONA)
	;;
  esac ],
	AC_MSG_RESULT(no)

	CFLAGS_MONA=""
)
AC_SUBST(CFLAGS_MONA)
AC_SUBST(LIBS_MONA)

AC_ARG_ENABLE(doxygen, 
[--enable-doxygen=DOXYGEN, use doxygen (default is yes)],
[case "${enableval}" in
  no)  DOXYGEN="";;
  *) 
	if test -n"$enableval"; then
		DOXYGEN=${enableval}
	else
		DOXYGEN=doxygen
	fi;
esac],
[
   DOXYGEN="doxygen"
])
if test "x$DOXYGEN" != "x"; then
AC_CHECK_PROG(DOXYGEN, $DOXYGEN, $DOXYGEN, "")
fi;
AM_CONDITIONAL(HAS_DOXYGEN, test "x$DOXYGEN" != "x")

AC_OUTPUT([
Makefile
gautomata/Makefile
gautomata/automaton/Makefile
gautomata/nfa/Makefile
gautomata/bnfa/Makefile
gautomata/refnfa/Makefile
gautomata/mnfa/Makefile
gautomata/nfta/Makefile
gautomata/bnfta/Makefile
gautomata/refnfta/Makefile
gautomata-config
Doxyfile
gautomata.spec
])
